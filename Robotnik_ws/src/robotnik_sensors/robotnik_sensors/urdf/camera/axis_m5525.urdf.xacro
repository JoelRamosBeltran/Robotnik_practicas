<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="sensor_axis_m5525">
  <xacro:property name="ptz_joint_effort_limit" value="1.0"/>
  <xacro:property name="ptz_joint_velocity_limit" value="1.0"/>
  <xacro:property name="ptz_joint_friction" value="0.1"/>
  <xacro:property name="ptz_joint_damping" value="0.1"/>
  <xacro:property name="ptz_mechanical_reduction" value="1.0"/>  
  <xacro:property name="PI" value="3.14159265359"/>

  <xacro:arg name="axis_m5525_controllers_params_file" default=""/> <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5525.yaml -->

  <xacro:macro name="sensor_axis_m5525"
               params="frame_prefix
                       parent
                       *origin
                       simulation:=false
                       node_namespace:=${None}
                       node_name:=sensor_axis_m5525
                       topic_prefix:=~/">

    <joint name="${frame_prefix}base_joint" type="fixed">
      <axis xyz="0 1 0"/>
      <xacro:insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="${frame_prefix}base_link"/>
    </joint>

    <link name="${frame_prefix}base_link">
      <inertial>
        <origin xyz="0.066 0 0" rpy="0 ${3.1415/2} 0"/>
        <mass value="0.8"/>
        <xacro:solid_cuboid_inertia m="0.8" w="0.165" h="0.165" d="0.132" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 ${3.1415/2} 0"/>
        <!-- to center the axis model -->
        <material name="axis_color">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
        <geometry>
          <mesh filename="package://robotnik_sensors/meshes/axis_m5525.dae" scale="1.0 1.0 1.0"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0" rpy="0 ${3.1415/2} 0"/>
        <geometry>
          <mesh filename="package://robotnik_sensors/meshes/axis_m5525.stl" scale="1.0 1.0 1.0"/>
        </geometry>
      </collision>
    </link>

    <joint name="${frame_prefix}pan_joint" type="revolute">
      <axis xyz="1 0 0"/>
      <origin xyz="0.087 0.0 0.0" rpy="0 0 0"/>
      <!-- check the displacement -->
      <parent link="${frame_prefix}base_link"/>
      <child link="${frame_prefix}pan_link"/>
      <limit effort="${ptz_joint_effort_limit}" velocity="${ptz_joint_velocity_limit}" lower="-3.1416" upper="3.1416"/>
      <joint_properties damping="${ptz_joint_damping}" friction="{ptz_joint_friction}"/>
    </joint>
    <link name="${frame_prefix}pan_link">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <xacro:solid_cuboid_inertia m="0.1" w="0.1" h="0.11" d="0.11" />
      </inertial>
    </link>

    <joint name="${frame_prefix}tilt_joint" type="revolute">
      <axis xyz="0 -1 0"/>
      <origin xyz="0.0 0.0 0.0" rpy="0 ${-PI/2} 0"/>
      <parent link="${frame_prefix}pan_link"/>
      <child link="${frame_prefix}tilt_link"/>
      <limit effort="${ptz_joint_effort_limit}" velocity="${ptz_joint_velocity_limit}" lower="-1.5708" upper="1.5708"/>
      <joint_properties damping="${ptz_joint_damping}" friction="{ptz_joint_friction}"/>
    </joint>
    <link name="${frame_prefix}tilt_link">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <xacro:solid_cuboid_inertia m="0.1" w="0.11" h="0.11" d="0.1" />
      </inertial>
    </link>

    <joint name="${frame_prefix}frame_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${frame_prefix}tilt_link"/>
      <child link="${frame_prefix}frame_link"/>
    </joint>
    <link name="${frame_prefix}frame_link">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0"/>
        <xacro:solid_cuboid_inertia m="0.1" w="0.11" h="0.11" d="0.1" />
      </inertial>
    </link>
    <!-- Optical frame -->
    <joint name="${frame_prefix}optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-3.1415/2} 0 ${-3.1415/2}"/>
      <parent link="${frame_prefix}frame_link"/>
      <child link="${frame_prefix}optical_frame_link"/>
    </joint>
    <link name="${frame_prefix}optical_frame_link">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0"/>
        <xacro:solid_cuboid_inertia m="0.1" w="0.11" h="0.11" d="0.1" />
      </inertial>
    </link>
    <gazebo reference="${frame_prefix}base_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>

    <!-- Axis sensor for simulation -->
    <xacro:if value="${simulation}">
      <xacro:sensor_axis_m5525_gazebo/>
    </xacro:if>

  </xacro:macro>


	<xacro:macro name="sensor_axis_m5525_gazebo">

		<gazebo reference="${frame_prefix}frame_link"> <!-- the image will be generated from this (${name}_frame) point of view, with the front being the X axis -->
			<sensor name="${frame_prefix}sensor" type="camera">
        <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
        <always_on>true</always_on>
        <visualize>false</visualize>
				<update_rate>30</update_rate>
				<camera>
					<horizontal_fov>${45.0*PI/180.0}</horizontal_fov>
					<vertical_fov>${32.0*PI/180.0}</vertical_fov>
					<image>
						<format>B8G8R8</format>
						<width>640</width>
						<height>480</height>
					</image>
					<clip>
						<near>0.1</near>
						<far>100.0</far>
					</clip>
				</camera>
				<plugin name="${node_name}" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace>${node_namespace}</namespace>
            <remapping>~/image_raw:=${topic_prefix}rgb/image_raw</remapping>
            <remapping>~/camera_info:=${topic_prefix}rgb/camera_info</remapping>
            <remapping>~/compressed:=${topic_prefix}rgb/compressed</remapping>
            <remapping>~/compressedDepth:=${topic_prefix}rgb/compressedDepth</remapping>
            <remapping>~/theora:=${topic_prefix}rgb/theora</remapping>
          </ros>
					<!-- <alwaysOn>true</alwaysOn> -->
					<camera_name>${node_name}</camera_name>
					<frame_name>${frame_prefix}optical_frame_link</frame_name>
					<!-- this is just which name the Image msg will have, it does not affect the simulation.
					     However must be set to the optical_frame,  -->
					<hackBaseline>0.07</hackBaseline>
					<!-- <distortionK1>0.0</distortionK1>
					<distortionK2>0.0</distortionK2>
					<distortionK3>0.0</distortionK3>
					<distortionT1>0.0</distortionT1>
					<distortionT2>0.0</distortionT2>
					<ignoreTfPrefix>1</ignoreTfPrefix> -->
				</plugin>
			</sensor>
		</gazebo>

    <!-- ros2 control -->
    <gazebo>
      <plugin name="axis_m5525_control" filename="libgazebo_ros2_control.so">
        <robot_param>robot_description</robot_param>
        <robot_param_node>robot_state_publisher</robot_param_node>
        <parameters>$(arg axis_m5525_controllers_params_file)</parameters>
        <ros>
            <namespace>/${node_namespace}</namespace>
        </ros>
      </plugin>
    </gazebo>

    <xacro:macro name="ros2_joint" params="interface jmin jmax name">
          <joint name="${name}">
            <command_interface name="${interface}">
              <param name="min">${jmin}</param>
              <param name="max">${jmax}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <state_interface name="effort"/>
          </joint>
        </xacro:macro>

        <ros2_control name="GazeboSystem" type="system">
          <hardware>
              <plugin>gazebo_ros2_control/GazeboSystem</plugin>
          </hardware>

          <xacro:ros2_joint interface="position" jmin="-1.5708" jmax="1.5708" name="${frame_prefix}tilt_joint"/>
          <xacro:ros2_joint interface="position" jmin="-3.1415" jmax="3.1415" name="${frame_prefix}pan_joint"/>

        </ros2_control>

	</xacro:macro>

</robot>
