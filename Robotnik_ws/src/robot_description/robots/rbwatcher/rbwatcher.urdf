<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rbwatcher.urdf.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbwatcher">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- Import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <!-- in kg-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5013.yaml -->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5074.yaml-->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5525.yaml -->
  <!--$(find robotnik_sensors_gazebo)/config/camera/axis_m5526.yaml-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5013.yaml -->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5074.yaml-->
  <!-- $(find robotnik_sensors_gazebo)/config/camera/axis_m5525.yaml -->
  <!--$(find robotnik_sensors_gazebo)/config/camera/axis_m5526.yaml-->
  <!-- Properties and Arguments -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <!-- BASE FOOTPRINT -->
  <link name="robot_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="robot_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.1175"/>
    <!-- ${wheel_radius} property must be defined inside wheel description -->
    <parent link="robot_base_footprint"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_base_link">
    <inertial>
      <mass value="50.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/rbwatcher/rbwatcher_body.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/rbwatcher/rbwatcher_body.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- DOCKING CONTACTS -->
  <!-- <joint name="${prefix}base_docking_joint" type="fixed">
            <origin xyz="0.284 0.012 0.068" rpy="0 0 0 " />
            <parent link="${prefix}base_link"/>
            <child link="${prefix}base_docking_contact_link" />
        </joint> -->
  <!-- DOCKING LINK -->
  <!-- <link name="${prefix}base_docking_contact_link" /> -->
  <!--WHEEL TIRE -->
  <joint name="robot_front_right_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0.22795 -0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_front_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_front_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_front_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_front_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_front_right_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_front_left_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0.22795 0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_front_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_front_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_front_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_front_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_front_left_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_back_right_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_back_right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.22795 -0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_back_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_back_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_back_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_back_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_back_right_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_back_left_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_back_left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.22795 0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_back_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_back_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_back_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_back_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_back_left_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="robot_top_structure_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.17024 0 0.27609"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_structure_link"/>
  </joint>
  <link name="robot_top_structure_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="alu_color">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
      <geometry>
        <mesh filename="package://robot_description/meshes/structures/rbwatcher/rbwatcher_top_structure.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/structures/rbwatcher/rbwatcher_top_structure.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_top_structure_link">
    <material>Gazebo/Gray</material>
    <gravity>true</gravity>
  </gazebo>
  <joint name="robot_vectornav_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.03534 0.132 0.16109"/>
    <parent link="robot_base_link"/>
    <child link="robot_vectornav_base_link"/>
  </joint>
  <link name="robot_vectornav_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.05"/>
      <inertia ixx="3.3333333333333337e-06" ixy="0" ixz="0" iyy="3.3333333333333337e-06" iyz="0" izz="3.3333333333333337e-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="vectornav_imu_color">
        <color rgba="1 0 0 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/imu/vectornav_vn100.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0045"/>
      <geometry>
        <box size="0.036 0.037 0.009"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_vectornav_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <origin xyz="-0.00745 0.0 0.0088"/>
    <parent link="robot_vectornav_base_link"/>
    <child link="robot_vectornav_link"/>
  </joint>
  <link name="robot_vectornav_link"/>
  <gazebo reference="robot_vectornav_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>200.0</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-3</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-3</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-3</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-4</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-4</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>2e-3</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>1.7e-2</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>1.7e-2</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <!-- <stddev>1.7e-2</stddev> -->
              <stddev>0.01</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu">
        <ros>
          <namespace>robot</namespace>
          <remapping>~/out:=imu/data</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>robot_vectornav_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_vectornav_base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="robot_front_rgbd_camera_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29881 0.0 0.15243"/>
    <parent link="robot_base_link"/>
    <child link="robot_front_rgbd_camera_base_link"/>
  </joint>
  <link name="robot_front_rgbd_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="robot_front_rgbd_camera_joint" type="fixed">
    <parent link="robot_front_rgbd_camera_base_link"/>
    <child link="robot_front_rgbd_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="robot_front_rgbd_camera_link"/>
  </joint>
  <link name="robot_front_rgbd_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/depth/intel_realsense_d435/intel_d435_color.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.270833333333333e-05" ixy="0" ixz="0" iyy="1.041666666666667e-05" iyz="0" izz="7.270833333333333e-05"/>
    </inertial>
  </link>
  <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
  <!-- camera depth joints and links -->
  <joint name="robot_front_rgbd_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_depth_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_depth_frame"/>
  <joint name="robot_front_rgbd_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_depth_frame"/>
    <child link="robot_front_rgbd_camera_depth_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="robot_front_rgbd_camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_infra1_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra1_frame"/>
  <joint name="robot_front_rgbd_camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_infra1_frame"/>
    <child link="robot_front_rgbd_camera_infra1_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="robot_front_rgbd_camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_infra2_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra2_frame"/>
  <joint name="robot_front_rgbd_camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_infra2_frame"/>
    <child link="robot_front_rgbd_camera_infra2_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="robot_front_rgbd_camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_color_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_color_frame"/>
  <joint name="robot_front_rgbd_camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_color_frame"/>
    <child link="robot_front_rgbd_camera_color_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_color_optical_frame"/>
  <gazebo reference="robot_front_rgbd_camera_color_frame">
    <sensor name="front_camera_color" type="camera">
      <camera name="front_camera_color">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <vertical_fov>0.6806784082777885</vertical_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="front_camera_color">
        <ros>
          <namespace>robot/front_camera_color</namespace>
        </ros>
        <camera_name>front_camera_color</camera_name>
        <frame_name>robot_front_rgbd_camera_color_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_front_rgbd_camera_infra2_frame">
    <sensor name="front_camera_irred1" type="camera">
      <camera name="front_camera_irred1">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="front_camera_irred1">
        <ros>
          <namespace>robot/front_camera_irred1</namespace>
        </ros>
        <camera_name>front_camera_irred1</camera_name>
        <frame_name>robot_front_rgbd_camera_infra1_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_front_rgbd_camera_infra2_frame">
    <sensor name="front_camera_irred2" type="camera">
      <camera name="front_camera_irred2">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="front_camera_irred2">
        <ros>
          <namespace>robot/front_camera_irred2</namespace>
        </ros>
        <camera_name>front_camera_irred2</camera_name>
        <frame_name>robot_front_rgbd_camera_infra2_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_front_rgbd_camera_depth_frame">
    <sensor name="front_camera_depth" type="depth">
      <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="front_camera_depth">
        <ros>
          <namespace>robot</namespace>
          <remapping>~/image_raw:=front_rgbd_camera_depthrgb/image_raw_color</remapping>
          <remapping>~/camera_info:=front_rgbd_camera_depthrgb/camera_info</remapping>
          <remapping>~/points:=front_rgbd_camera_depthpoint_cloud/cloud_registered</remapping>
          <remapping>~/depth/camera_info:=front_rgbd_camera_depthdepth/camera_info</remapping>
          <remapping>~/depth/image_raw:=front_rgbd_camera_depthdepth/depth_registered</remapping>
        </ros>
        <camera_name>front_camera_depth</camera_name>
        <frame_name>robot_front_rgbd_camera_depth_optical_frame</frame_name>
        <min_depth>0.1</min_depth>
        <max_depth>100</max_depth>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="robot_rear_rgbd_camera_base_joint" type="fixed">
    <origin rpy="0 3.141592653589793 0" xyz="-0.308 0.0 0.18308"/>
    <parent link="robot_base_link"/>
    <child link="robot_rear_rgbd_camera_base_link"/>
  </joint>
  <link name="robot_rear_rgbd_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="robot_rear_rgbd_camera_joint" type="fixed">
    <parent link="robot_rear_rgbd_camera_base_link"/>
    <child link="robot_rear_rgbd_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="robot_rear_rgbd_camera_link"/>
  </joint>
  <link name="robot_rear_rgbd_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/depth/intel_realsense_d435/intel_d435_color.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.270833333333333e-05" ixy="0" ixz="0" iyy="1.041666666666667e-05" iyz="0" izz="7.270833333333333e-05"/>
    </inertial>
  </link>
  <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
  <!-- camera depth joints and links -->
  <joint name="robot_rear_rgbd_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_rear_rgbd_camera_link"/>
    <child link="robot_rear_rgbd_camera_depth_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_depth_frame"/>
  <joint name="robot_rear_rgbd_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_rear_rgbd_camera_depth_frame"/>
    <child link="robot_rear_rgbd_camera_depth_optical_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="robot_rear_rgbd_camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="robot_rear_rgbd_camera_link"/>
    <child link="robot_rear_rgbd_camera_infra1_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_infra1_frame"/>
  <joint name="robot_rear_rgbd_camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_rear_rgbd_camera_infra1_frame"/>
    <child link="robot_rear_rgbd_camera_infra1_optical_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="robot_rear_rgbd_camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="robot_rear_rgbd_camera_link"/>
    <child link="robot_rear_rgbd_camera_infra2_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_infra2_frame"/>
  <joint name="robot_rear_rgbd_camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_rear_rgbd_camera_infra2_frame"/>
    <child link="robot_rear_rgbd_camera_infra2_optical_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="robot_rear_rgbd_camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="robot_rear_rgbd_camera_link"/>
    <child link="robot_rear_rgbd_camera_color_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_color_frame"/>
  <joint name="robot_rear_rgbd_camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_rear_rgbd_camera_color_frame"/>
    <child link="robot_rear_rgbd_camera_color_optical_frame"/>
  </joint>
  <link name="robot_rear_rgbd_camera_color_optical_frame"/>
  <gazebo reference="robot_rear_rgbd_camera_color_frame">
    <sensor name="rear_camera_color" type="camera">
      <camera name="rear_camera_color">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <vertical_fov>0.6806784082777885</vertical_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="rear_camera_color">
        <ros>
          <namespace>robot/rear_camera_color</namespace>
        </ros>
        <camera_name>rear_camera_color</camera_name>
        <frame_name>robot_rear_rgbd_camera_color_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_rear_rgbd_camera_infra2_frame">
    <sensor name="rear_camera_irred1" type="camera">
      <camera name="rear_camera_irred1">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="rear_camera_irred1">
        <ros>
          <namespace>robot/rear_camera_irred1</namespace>
        </ros>
        <camera_name>rear_camera_irred1</camera_name>
        <frame_name>robot_rear_rgbd_camera_infra1_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_rear_rgbd_camera_infra2_frame">
    <sensor name="rear_camera_irred2" type="camera">
      <camera name="rear_camera_irred2">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="rear_camera_irred2">
        <ros>
          <namespace>robot/rear_camera_irred2</namespace>
        </ros>
        <camera_name>rear_camera_irred2</camera_name>
        <frame_name>robot_rear_rgbd_camera_infra2_optical_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="robot_rear_rgbd_camera_depth_frame">
    <sensor name="rear_camera_depth" type="depth">
      <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <vertical_fov>0.8377580409572782</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="rear_camera_depth">
        <ros>
          <namespace>robot</namespace>
          <remapping>~/image_raw:=rear_rgbd_camera_depthrgb/image_raw_color</remapping>
          <remapping>~/camera_info:=rear_rgbd_camera_depthrgb/camera_info</remapping>
          <remapping>~/points:=rear_rgbd_camera_depthpoint_cloud/cloud_registered</remapping>
          <remapping>~/depth/camera_info:=rear_rgbd_camera_depthdepth/camera_info</remapping>
          <remapping>~/depth/image_raw:=rear_rgbd_camera_depthdepth/depth_registered</remapping>
        </ros>
        <camera_name>rear_camera_depth</camera_name>
        <frame_name>robot_rear_rgbd_camera_depth_optical_frame</frame_name>
        <min_depth>0.1</min_depth>
        <max_depth>100</max_depth>
      </plugin>
    </sensor>
  </gazebo>
  <!-- ANTENNA GPS -->
  <joint name="robot_gps_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.24824 0.095 0.76359"/>
    <parent link="robot_base_link"/>
    <child link="robot_gps_base_link"/>
  </joint>
  <link name="robot_gps_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.015"/>
      <mass value="0.2"/>
      <inertia ixx="0.00012435" ixy="0" ixz="0" iyy="0.00012435" iyz="0" izz="0.00021870000000000003"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="ublox_gps_color">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/gps/antenna_ANN_MB.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.01125"/>
      <geometry>
        <box size="0.0607 0.083 0.0225"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_gps_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <origin xyz="0.0 0.0 0.01125"/>
    <parent link="robot_gps_base_link"/>
    <child link="robot_gps_link"/>
  </joint>
  <link name="robot_gps_link">
	  </link>
  <gazebo reference="robot_gps_base_link">
    <material>Gazebo/White</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="robot_gps_base_link">
    <sensor name="ublox" type="gps">
      <always_on>true</always_on>
      <update_rate>5.0</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </vertical>
        </position_sensing>
        <vertical_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </vertical>
        </vertical_sensing>
      </gps>
      <plugin filename="libgazebo_ros_gps_sensor.so" name="ublox">
        <ros>
          <namespace>robot</namespace>
          <remapping>~/out:=gps_gpsfix</remapping>
          <remapping>~/vel:=gps_gpsvel</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="robot_top_3d_laserbase_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.11924 0.0 0.38609"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_3d_laserbase_link"/>
  </joint>
  <link name="robot_top_3d_laserbase_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/3d_lidar/robotsense/helios_16p.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/3d_lidar/robotsense/helios_16p.stl"/>
      </geometry>
      <material name="blackgray_color">
        <color rgba="0.25 0.25 0.25 1"/>
      </material>
    </visual>
    <inertial>
      <mass value="0.840"/>
      <origin xyz="0 0 0.04135"/>
      <inertia ixx="0.0013104203" ixy="0" ixz="0" iyy="0.0013104203" iyz="0" izz="0.00166334"/>
    </inertial>
  </link>
  <joint name="robot_top_3d_laserjoint" type="fixed">
    <parent link="robot_top_3d_laserbase_link"/>
    <child link="robot_top_3d_laserlink"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.0635"/>
  </joint>
  <link name="robot_top_3d_laserlink"/>
  <gazebo reference="robot_top_3d_laserlink">
    <sensor name="top_3d_laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1200</samples>
            <resolution>1.0</resolution>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1.0</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>1.4835298641951802</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>100.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.00</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="top_3d_laser">
        <ros>
          <namespace>robot</namespace>
          <remapping>~/out:=top_3d_laserpoint_cloud</remapping>
        </ros>
        <frame_name>robot_top_3d_laserlink</frame_name>
        <gaussian_noise>0.01</gaussian_noise>
        <organize_cloud>0</organize_cloud>
      </plugin>
    </sensor>
  </gazebo>
  <!-- ANTENNA GPS -->
  <joint name="robot_antenna_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="-0.24124 0.0 0.31109"/>
    <parent link="robot_base_link"/>
    <child link="robot_antenna_base_link"/>
  </joint>
  <link name="robot_antenna_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/others/antena_wifi_2J7A747Bc.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/others/antena_wifi_2J7A747Bc.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_antenna_link">
    <material>Gazebo/Gray</material>
    <gravity>true</gravity>
  </gazebo>
  <joint name="robot_top_ptz_camera_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.11808 0.0 0.55429"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_ptz_camera_base_link"/>
  </joint>
  <link name="robot_top_ptz_camera_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.066 0 0"/>
      <mass value="0.8"/>
      <inertia ixx="0.0029766000000000007" ixy="0" ixz="0" iyy="0.0029766000000000007" iyz="0" izz="0.003630000000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.07 -0.07 -0.045"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.07 -0.07 -0.045"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_top_ptz_camera_pan_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0318"/>
    <!-- check the displacement -->
    <parent link="robot_top_ptz_camera_base_link"/>
    <child link="robot_top_ptz_camera_pan_link"/>
    <limit effort="10000.0" lower="-3.1416" upper="3.1416" velocity="1.0"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_top_ptz_camera_pan_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0002016666666666667" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.00018416666666666668"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_pan.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_pan.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <transmission name="robot_top_ptz_camera_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerapan_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_tilt_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0.0 0.0 0.102"/>
    <parent link="robot_top_ptz_camera_pan_link"/>
    <child link="robot_top_ptz_camera_tilt_link"/>
    <limit effort="10000.0" lower="-1.5708" upper="1.5708" velocity="1.0"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_top_ptz_camera_tilt_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_tilt.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_tilt.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <transmission name="robot_top_ptz_camera_tilt_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_tilt_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_cameratilt_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_zoom_color_joint" type="prismatic">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="robot_top_ptz_camera_optical_frame_link"/>
    <child link="robot_top_ptz_camera_zoom_color_link"/>
    <limit effort="10000.0" lower="0" upper="10000" velocity="5"/>
  </joint>
  <link name="robot_top_ptz_camera_zoom_color_link">
    <inertial>
      <mass value="0.00001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.841666666666667e-08" ixy="0" ixz="0" iyy="1.841666666666667e-08" iyz="0" izz="2.016666666666667e-08"/>
    </inertial>
  </link>
  <transmission name="robot_top_ptz_camera_zoom_color_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_zoom_color_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerazoom_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_frame_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 0" xyz="0.05 0.025 0"/>
    <parent link="robot_top_ptz_camera_tilt_link"/>
    <child link="robot_top_ptz_camera_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <!-- Optical frame ${-M_PI/2} -->
  <joint name="robot_top_ptz_camera_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0.0 0 0"/>
    <parent link="robot_top_ptz_camera_frame_link"/>
    <child link="robot_top_ptz_camera_optical_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_optical_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <gazebo reference="robot_top_ptz_camera_base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="robot_top_ptz_camera_thermal_frame_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 0" xyz="0.05 -0.025 0.0"/>
    <parent link="robot_top_ptz_camera_tilt_link"/>
    <child link="robot_top_ptz_camera_thermal_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_thermal_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <!-- Optical frame ${-M_PI/2} -->
  <joint name="robot_top_ptz_camera_optical_thermal_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0.0 0 0"/>
    <parent link="robot_top_ptz_camera_thermal_frame_link"/>
    <child link="robot_top_ptz_camera_optical_thermal_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_optical_thermal_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <joint name="robot_top_ptz_camera_zoom_thermal_joint" type="prismatic">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="robot_top_ptz_camera_optical_thermal_frame_link"/>
    <child link="robot_top_ptz_camera_zoom_thermal_link"/>
    <limit effort="10000.0" lower="0" upper="10000" velocity="5"/>
  </joint>
  <link name="robot_top_ptz_camera_zoom_thermal_link">
    <inertial>
      <mass value="0.00001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.841666666666667e-08" ixy="0" ixz="0" iyy="1.841666666666667e-08" iyz="0" izz="2.016666666666667e-08"/>
    </inertial>
  </link>
  <transmission name="robot_top_ptz_camera_zoom_thermal_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_zoom_thermal_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerazoom_thermal_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_top_ptz_camera_base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="robot_top_ptz_camera_frame_link">
    <!-- the image will be generated from this (${name}_frame) point of view, with the front being the X axis -->
    <sensor name="robot_top_ptz_camera_sensor" type="camera">
      <update_rate>15.0</update_rate>
      <camera name="top_ptz_camera">
        <horizontal_fov>1.0471975511965976</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <ignition_frame_id>robot_top_ptz_camera_optical_frame_link</ignition_frame_id>
      <topic>/robot/top_ptz_camera/color/image_raw</topic>
    </sensor>
    <sensor name="thermal_robot_top_ptz_camera_sensor" type="thermal">
      <update_rate>15.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975511965976</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <visualize>true</visualize>
      <topic>/robot/top_ptz_camera/thermal/image_raw</topic>
      <ignition_frame_id>robot_top_ptz_camera_thermal_frame_link</ignition_frame_id>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="ros2_control">
      <robot_param>robot_description</robot_param>
      <robot_param_node>robot_state_publisher</robot_param_node>
      <parameters>/home/joel/Documentos/GitHub/Robotnik_practicas/Robotnik_ws/install/robot_description/share/robot_description/simulators/gazebo_classic/rbwatcher/rbwatcher_controller_params.yaml</parameters>
      <ros>
        <namespace>/robot</namespace>
      </ros>
    </plugin>
  </gazebo>
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="robot_front_left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_front_right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_back_left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-20</param>
        <param name="max">20</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_back_right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-20</param>
        <param name="max">20</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_lift_ewellix_lift_top_joint">
      <command_interface name="position">
        <param name="min">-20</param>
        <param name="max">20</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_top_ptz_camera_pan_joint">
      <command_interface name="position">
        <param name="min">-20</param>
        <param name="max">20</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="robot_top_ptz_camera_tilt_joint">
      <command_interface name="position">
        <param name="min">-20</param>
        <param name="max">20</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="planar_move">
      <ros>
        <!-- Remap the default topic -->
        <remapping>cmd_vel:=/robot/robotnik_base_controller/cmd_vel</remapping>
      </ros>
      <update_rate>100</update_rate>
      <publish_rate>10</publish_rate>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <odometry_frame>robot_odom</odometry_frame>
      <robot_base_frame>robot_base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
</robot>
